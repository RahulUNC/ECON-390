Population[MarketSharePerStoreProduct[10,][1, ], ]$pop_size
MarketSharePerStoreProduct[2,]
Population[1, ]$pop_size
MarketSharePerStoreProduct[2,][1]
Population[1, ]$pop_size
MarketSharePerStoreProduct[2,][1,]
Population[1, ]$pop_size
MarketSharePerStoreProduct[2,][1]
Population[1, ]$pop_size
MarketSharePerStoreProduct[2,]$Group.2
Population[1, ]$pop_size
MarketSharePerStoreProduct[2,]$Group.2
Population[MarketSharePerStoreProduct[2,]$Group.2, ]$pop_size
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"))
PopulationPerStore
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], 0)
for(i in NROW(MarketSharePerStoreProduct)) {
MarketSharePerStoreProduct[4] = Population[MarketSharePerStoreProduct[i,]$Group.2, ]$pop_size
}
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"))
PopulationPerStore
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], 0)
for(i in NROW(MarketSharePerStoreProduct)) {
MarketSharePerStoreProduct[4] = Population[MarketSharePerStoreProduct[PricePerProduct[2],]$Group.2, ]$pop_size
}
MarketSharePerStoreProduct[2,]$Group.2
Population[MarketSharePerStoreProduct[2,]$Group.2, ]$pop_size
MarketSharePerStoreProduct[4]
MarketSharePerStoreProduct[2,]$Group.2
Population[MarketSharePerStoreProduct[2,]$Group.2, ]$pop_size
MarketSharePerStoreProduct[1,]
MarketSharePerStoreProduct[2,]$Group.2
Population[MarketSharePerStoreProduct[2,]$Group.2, ]$pop_size
MarketSharePerStoreProduct[1,][4]
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"))
PopulationPerStore
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], 0)
for(i in NROW(MarketSharePerStoreProduct)) {
MarketSharePerStoreProduct[i,][4] = Population[MarketSharePerStoreProduct[i,]$Group.2, ]$pop_size
}
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"))
PopulationPerStore
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], 0)
for(i in NROW(MarketSharePerStoreProduct)) {
MarketSharePerStoreProduct[i,]$X0 = Population[MarketSharePerStoreProduct[i,]$Group.2, ]$pop_size
}
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"))
PopulationPerStore
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], 0)
for(i in NROW(MarketSharePerStoreProduct)) {
MarketSharePerStoreProduct[i,][4] = Population[MarketSharePerStoreProduct[i,]$Group.2, ]$pop_size
}
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"), all.x = TRUE)
PopulationPerStore
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], 0)
for(i in NROW(MarketSharePerStoreProduct)) {
MarketSharePerStoreProduct[i,][4] = Population[MarketSharePerStoreProduct[i,]$Group.2, ]$pop_size
}
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = aggregatemerge(Sales, Population, by=c("store"), all.x = TRUE)
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"), all.x = TRUE)
PopulationPerStore
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], 0)
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"), all = TRUE)
PopulationPerStore = PopulationPerStore[2]
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], )
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"), all = TRUE)
PopulationPerStore = PopulationPerStore[2]
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"), all = TRUE)
PopulationPerStore
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
PopulationPerStore = merge(Sales, Population, by=c("store"), all.y = TRUE)
PopulationPerStore
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales
Population
Sales =  merge(Sales, Population, by=c("store"), all.y = TRUE)
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
SalesPerProduct
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Sales, Population, by=c("store"), all.y = TRUE)
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Sales, Population, by=c("store"), all.y = TRUE)
Sales
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Sales, Population, by=c("store"), all.x = TRUE)
Sales
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Sales, Population, by=c("store"), all.x = TRUE)
Sales
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
Sales = read.csv('sales_data.csv')
attach(Sales)
summary(Sales$price)
aggregate(Sales$price, list(Sales$store), FUN = mean)
MarketSharePerStoreProduct[2,]$Group.2
Population[MarketSharePerStoreProduct[2,]$Group.2, ]$pop_size
MarketSharePerStoreProduct[1,][4]
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Sales, Population, by=c("store"), all.x = TRUE)
Sales
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Sales, Population, by=c("store"), all.x = TRUE)
Sales
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Population, Sales, by=c("store"), all.x = TRUE)
Sales
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Population, Sales, by=c("store"), all = TRUE)
Sales
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
PopulationPerStore = aggregate(Sales$pop_size, list(Sales$product, Sales$store), FUN = sum)
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Population, Sales, by=c("store"), all = TRUE)
Sales
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
PopulationPerStore = aggregate(Sales$pop_size, list(Sales$product, Sales$store), FUN = mean)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3] )
MarketSharePerStoreProduct
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Population, Sales, by=c("store"), all = TRUE)
Sales
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
PopulationPerStore = aggregate(Sales$pop_size, list(Sales$product, Sales$store), FUN = mean)
Sales = read.csv('sales_data.csv')
attach(Sales)
summary(Sales$price)
pricePerStore = aggregate(Sales$price, list(Sales$store), FUN = mean)
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Population, Sales, by=c("store"), all = TRUE)
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
PopulationPerStore = aggregate(Sales$pop_size, list(Sales$product, Sales$store), FUN = mean)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], PopulationPerStore[3])
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], PopulationPerStore[3],  MarketSharePerStoreProduct[3]/MarketSharePerStoreProduct[4], PricePerProduct[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price')
plot(MarketSharePerStoreProduct$share, MarketSharePerStoreProduct$price, ylab = "Price", xlab = "Market Share", main = "Price vs Market Share")
Costs = read.csv("cost_data.csv")
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price','cost_shift')
library(ggplot2)
ggplot(MarketSharePerStoreProduct, aes(y = share, x = price, color = cost_shift) ) + geom_point() + geom_smooth(method = "lm", se = FALSE)
eps = rnorm(NROW(Sales),0, 0.05^2)
#Repeated from 2 and 3
Population = read.csv('population_data.csv')
Sales = read.csv('sales_data.csv')
# Acounting for EPS
SalesEps =  merge(Population, Sales, by=c("store"), all = TRUE)
SalesEps$price =  Sales$price + eps
PricePerProduct = aggregate(SalesEps$price, list(SalesEps$product, SalesEps$store), FUN = mean)
#Repeated from 2 and 3
SalesPerProduct = aggregate(SalesEps$quantity, list(SalesEps$product, SalesEps$store), FUN = sum)
PopulationPerStore = aggregate(SalesEps$pop_size, list(SalesEps$product, SalesEps$store), FUN = median)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], PopulationPerStore[3])
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], PopulationPerStore[3],  MarketSharePerStoreProduct[3]/MarketSharePerStoreProduct[4], PricePerProduct[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price')
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price','cost_shift')
MarketSharePerStoreProduct
MarketSharePerStoreProduct %>% groupby(cost_shift) %>% summarise(price = mean(price))
MarketSharePerStoreProduct %>% group_by(MarketSharePerStoreProduct$cost_shift) %>% summarise(MarketSharePerStoreProduct$price = mean(MarketSharePerStoreProduct$price))
MarketSharePerStoreProduct %>% group_by(MarketSharePerStoreProduct$cost_shift) %>% summarise(price = mean(MarketSharePerStoreProduct$price))
MarketSharePerStoreProduct %>% group_by(MarketSharePerStoreProduct$cost_shift) %>% summarise(MarketSharePerStoreProduct$price = mean(MarketSharePerStoreProduct$price))
MarketSharePerStoreProduct %>% group_by(MarketSharePerStoreProduct$cost_shift) %>% summarise(price = mean(MarketSharePerStoreProduct$price))
MarketSharePerStoreProduct %>% group_by(MarketSharePerStoreProduct$cost_shift) %>% summarise(price = mean(MarketSharePerStoreProduct$price))
MarketSharePerStoreProduct %>% group_by(MarketSharePerStoreProduct$cost_shift) %>% summarise(price = mean(MarketSharePerStoreProduct$price))
MarketSharePerStoreProduct %>% group_by(MarketSharePerStoreProduct$cost_shift) %>% summarise(price = mean(MarketSharePerStoreProduct$price))
MarketSharePerStoreProduct %>%
group_by(MarketSharePerStoreProduct$cost_shift) %>%
summarise(price = mean(MarketSharePerStoreProduct$price))
library(dplyr)
Sales = read.csv('sales_data.csv')
attach(Sales)
summary(Sales$price)
pricePerStore = aggregate(Sales$price, list(Sales$store), FUN = mean)
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Population, Sales, by=c("store"), all = TRUE)
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
PopulationPerStore = aggregate(Sales$pop_size, list(Sales$product, Sales$store), FUN = mean)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], PopulationPerStore[3])
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], PopulationPerStore[3],  MarketSharePerStoreProduct[3]/MarketSharePerStoreProduct[4], PricePerProduct[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price')
plot(MarketSharePerStoreProduct$share, MarketSharePerStoreProduct$price, ylab = "Price", xlab = "Market Share", main = "Price vs Market Share")
Costs = read.csv("cost_data.csv")
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price','cost_shift')
eps = rnorm(NROW(Sales),0, 0.05^2)
#Repeated from 2 and 3
Population = read.csv('population_data.csv')
Sales = read.csv('sales_data.csv')
# Acounting for EPS
SalesEps =  merge(Population, Sales, by=c("store"), all = TRUE)
SalesEps$price =  Sales$price + eps
PricePerProduct = aggregate(SalesEps$price, list(SalesEps$product, SalesEps$store), FUN = mean)
#Repeated from 2 and 3
SalesPerProduct = aggregate(SalesEps$quantity, list(SalesEps$product, SalesEps$store), FUN = sum)
PopulationPerStore = aggregate(SalesEps$pop_size, list(SalesEps$product, SalesEps$store), FUN = median)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], PopulationPerStore[3])
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], PopulationPerStore[3],  MarketSharePerStoreProduct[3]/MarketSharePerStoreProduct[4], PricePerProduct[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price')
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price','cost_shift')
MarketSharePerStoreProduct %>%
group_by(MarketSharePerStoreProduct$cost_shift) %>%
summarise(price = mean(MarketSharePerStoreProduct$price))
eps = rnorm(NROW(Sales),0, 0.05^2)
#Repeated from 2 and 3
Population = read.csv('population_data.csv')
Sales = read.csv('sales_data.csv')
# Acounting for EPS
SalesEps =  merge(Population, Sales, by=c("store"), all = TRUE)
SalesEps$price =  Sales$price + eps
PricePerProduct = aggregate(SalesEps$price, list(SalesEps$product, SalesEps$store), FUN = mean)
#Repeated from 2 and 3
SalesPerProduct = aggregate(SalesEps$quantity, list(SalesEps$product, SalesEps$store), FUN = sum)
PopulationPerStore = aggregate(SalesEps$pop_size, list(SalesEps$product, SalesEps$store), FUN = mean)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], PopulationPerStore[3])
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], PopulationPerStore[3],  MarketSharePerStoreProduct[3]/MarketSharePerStoreProduct[4], PricePerProduct[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price')
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price','cost_shift')
MarketSharePerStoreProduct %>%
group_by(MarketSharePerStoreProduct$cost_shift) %>%
summarise(price = mean(MarketSharePerStoreProduct$price))
MarketSharePerStoreProduct %>%
group_by(Mcost_shift) %>%
summarise(price = mean(price))
attach(MarketSharePerStoreProduct)
MarketSharePerStoreProduct %>%
group_by(Mcost_shift) %>%
summarise(price = mean(price))
attach(MarketSharePerStoreProduct)
MarketSharePerStoreProduct %>%
group_by(cost_shift) %>%
summarise(price = mean(price))
MarketSharePerStoreProduct %>%
group_by(cost_shift) %>%
summarise(price = mean(price))
summary(glm(price ∼ factor(cost_shit),data = MarketSharePerStoreProduct))
summary(glm(price ∼ factor(cost_shit),data = MarketSharePerStoreProduct))
summary(glm(price∼factor(cost_shit),data = MarketSharePerStoreProduct))
summary(lm(price∼factor(cost_shift),data=MarketSharePerStoreProduct))
model = glm(price ~ factor(cost_shift), data = MarketSharePerStoreProduct)
summary(model)
pricePerStore = aggregate(Sales$price, list(Sales$store), FUN = mean)
library(dplyr)
Sales = read.csv('sales_data.csv')
attach(Sales)
summary(Sales$price)
pricePerStore = aggregate(Sales$price, list(Sales$store), FUN = mean)
pricePerStore = aggregate(Sales$price, list(Sales$store), FUN = mean)
pricePerStore
pricePerStore = aggregate(Sales$price, list(Sales$store), FUN = mean)
library(dplyr)
Sales = read.csv('sales_data.csv')
attach(Sales)
summary(Sales$price)
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Population, Sales, by=c("store"), all = TRUE)
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
PopulationPerStore = aggregate(Sales$pop_size, list(Sales$product, Sales$store), FUN = mean)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], PopulationPerStore[3])
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], PopulationPerStore[3],  MarketSharePerStoreProduct[3]/MarketSharePerStoreProduct[4], PricePerProduct[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price')
plot(MarketSharePerStoreProduct$share, MarketSharePerStoreProduct$price, ylab = "Price", xlab = "Market Share", main = "Price vs Market Share")
Costs = read.csv("cost_data.csv")
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
library(dplyr)
Sales = read.csv('sales_data.csv')
attach(Sales)
library(dplyr)
Sales = read.csv('sales_data.csv')
summary(Sales$price)
pricePerStore = aggregate(Sales$price, list(Sales$store), FUN = mean)
# Sjm = Qjm / Nm
# Qjm = total quantity sold of product j in market M (store)
# Nm = total size of market (store), surrounding area of each store
Population = read.csv('population_data.csv')
Sales =  merge(Population, Sales, by=c("store"), all = TRUE)
PricePerProduct = aggregate(Sales$price, list(Sales$product, Sales$store), FUN = mean)
SalesPerProduct = aggregate(Sales$quantity, list(Sales$product, Sales$store), FUN = sum)
PopulationPerStore = aggregate(Sales$pop_size, list(Sales$product, Sales$store), FUN = mean)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], PopulationPerStore[3])
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], PopulationPerStore[3],  MarketSharePerStoreProduct[3]/MarketSharePerStoreProduct[4], PricePerProduct[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price')
plot(MarketSharePerStoreProduct$share, MarketSharePerStoreProduct$price, ylab = "Price", xlab = "Market Share", main = "Price vs Market Share")
Costs = read.csv("cost_data.csv")
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
Costs = read.csv("cost_data.csv")
Costs
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
Costs = read.csv("cost_data.csv")
Costs
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
Costs = read.csv("cost_data.csv")
Costs
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price','cost_shift')
Costs = read.csv("cost_data.csv")
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price','cost_shift')
eps = rnorm(NROW(Sales),0, 0.05^2)
#Repeated from 2 and 3
Population = read.csv('population_data.csv')
Sales = read.csv('sales_data.csv')
# Acounting for EPS
SalesEps =  merge(Population, Sales, by=c("store"), all = TRUE)
SalesEps$price =  Sales$price + eps
PricePerProduct = aggregate(SalesEps$price, list(SalesEps$product, SalesEps$store), FUN = mean)
#Repeated from 2 and 3
SalesPerProduct = aggregate(SalesEps$quantity, list(SalesEps$product, SalesEps$store), FUN = sum)
PopulationPerStore = aggregate(SalesEps$pop_size, list(SalesEps$product, SalesEps$store), FUN = mean)
MarketSharePerStoreProduct = data.frame(PricePerProduct[2], PricePerProduct[1], SalesPerProduct[3], PopulationPerStore[3])
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], PopulationPerStore[3],  MarketSharePerStoreProduct[3]/MarketSharePerStoreProduct[4], PricePerProduct[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price')
MarketSharePerStoreProduct = data.frame(MarketSharePerStoreProduct[1], MarketSharePerStoreProduct[2], MarketSharePerStoreProduct[3], MarketSharePerStoreProduct[4], MarketSharePerStoreProduct[5], MarketSharePerStoreProduct[6], Costs[3])
colnames(MarketSharePerStoreProduct) = c('store','product','sales','pop_size', 'share', 'price','cost_shift')
